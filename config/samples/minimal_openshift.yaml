apiVersion: helm-operator.sumologic.com/v1alpha1
kind: SumologicCollection
metadata:
  name: collection
spec:
  sumologic:
    ## Sumo access ID
    accessId: ""

    ## Sumo access key
    accessKey: ""

    ## Sumo API endpoint; Leave blank for automatic endpoint discovery and redirection
    ## ref: https://help.sumologic.com/APIs/General-API-Information/Sumo-Logic-Endpoints-and-Firewall-Security
    endpoint: ""

    ## Cluster name: Note spaces are not allowed and will be replaced with dashes.
    clusterName: "kubernetes"

    ## creation of Security Context Constraints in Openshift
    scc:
      create: true

    setup:
      ## uncomment to force collection installation (disables k8s version verification)
      # force: true
      job:
        image:
          repository: public.ecr.aws/sumologic/kubernetes-setup
          tag: 3.0.0

  fluentd:
    image:
      repository: public.ecr.aws/sumologic/kubernetes-fluentd
      tag: 1.12.2-sumo-0
      pullPolicy: IfNotPresent

    logs:
      ## Container log configuration
      containers:
        ## To enable stiching multiline logs in fluentd when fluent-bit Multiline feature is On
        multiline:
          enabled: false

  ## Configure metrics-server
  ## ref: https://github.com/helm/charts/blob/master/stable/metrics-server/values.yaml
  metrics-server:
    ## Set the enabled flag to true for enabling metrics-server.
    ## This is required before enabling fluentd autoscaling unless you have an existing metrics-server in the cluster.
    enabled: false
    image:
      repository: docker.io/bitnami/metrics-server
      tag: 0.4.2-debian-10-r58
    apiService:
      create: false

  ## Configure fluent-bit
  ## ref: https://github.com/fluent/helm-charts/blob/master/charts/fluent-bit/values.yaml
  fluent-bit:
    image:
      repository: public.ecr.aws/sumologic/fluent-bit
      tag: 1.6.10

    ## Set securityContext of fluent-bit daemonset pods as privileged for running in Openshift
    securityContext:
      privileged: true

    ## https://docs.fluentbit.io/manual/administration/configuring-fluent-bit
    config:
      ## https://docs.fluentbit.io/manual/service
      service: |
        [SERVICE]
            Flush        1
            Daemon       Off
            Log_Level    info
            Parsers_File parsers.conf
            Parsers_File custom_parsers.conf
            HTTP_Server  On
            HTTP_Listen  0.0.0.0
            HTTP_Port    2020
      ## https://docs.fluentbit.io/manual/pipeline/inputs
      ## ref: https://github.com/SumoLogic/sumologic-kubernetes-collection/blob/main/deploy/docs/ContainerLogs.md
      inputs: |
        [INPUT]
            Name                tail
            Path                /var/log/containers/*.log
            Parser              crio
            Tag                 containers.*
            Refresh_Interval    1
            Rotate_Wait         60
            Mem_Buf_Limit       5MB
            Skip_Long_Lines     On
            DB                  /tail-db/tail-containers-state-sumo.db
            DB.Sync             Normal
        [INPUT]
            Name            systemd
            Tag             host.*
            DB              /tail-db/systemd-state-sumo.db
            Systemd_Filter  _SYSTEMD_UNIT=addon-config.service
            Systemd_Filter  _SYSTEMD_UNIT=addon-run.service
            Systemd_Filter  _SYSTEMD_UNIT=cfn-etcd-environment.service
            Systemd_Filter  _SYSTEMD_UNIT=cfn-signal.service
            Systemd_Filter  _SYSTEMD_UNIT=clean-ca-certificates.service
            Systemd_Filter  _SYSTEMD_UNIT=containerd.service
            Systemd_Filter  _SYSTEMD_UNIT=coreos-metadata.service
            Systemd_Filter  _SYSTEMD_UNIT=coreos-setup-environment.service
            Systemd_Filter  _SYSTEMD_UNIT=coreos-tmpfiles.service
            Systemd_Filter  _SYSTEMD_UNIT=dbus.service
            Systemd_Filter  _SYSTEMD_UNIT=docker.service
            Systemd_Filter  _SYSTEMD_UNIT=efs.service
            Systemd_Filter  _SYSTEMD_UNIT=etcd-member.service
            Systemd_Filter  _SYSTEMD_UNIT=etcd.service
            Systemd_Filter  _SYSTEMD_UNIT=etcd2.service
            Systemd_Filter  _SYSTEMD_UNIT=etcd3.service
            Systemd_Filter  _SYSTEMD_UNIT=etcdadm-check.service
            Systemd_Filter  _SYSTEMD_UNIT=etcdadm-reconfigure.service
            Systemd_Filter  _SYSTEMD_UNIT=etcdadm-save.service
            Systemd_Filter  _SYSTEMD_UNIT=etcdadm-update-status.service
            Systemd_Filter  _SYSTEMD_UNIT=flanneld.service
            Systemd_Filter  _SYSTEMD_UNIT=format-etcd2-volume.service
            Systemd_Filter  _SYSTEMD_UNIT=kube-node-taint-and-uncordon.service
            Systemd_Filter  _SYSTEMD_UNIT=kubelet.service
            Systemd_Filter  _SYSTEMD_UNIT=ldconfig.service
            Systemd_Filter  _SYSTEMD_UNIT=locksmithd.service
            Systemd_Filter  _SYSTEMD_UNIT=logrotate.service
            Systemd_Filter  _SYSTEMD_UNIT=lvm2-monitor.service
            Systemd_Filter  _SYSTEMD_UNIT=mdmon.service
            Systemd_Filter  _SYSTEMD_UNIT=nfs-idmapd.service
            Systemd_Filter  _SYSTEMD_UNIT=nfs-mountd.service
            Systemd_Filter  _SYSTEMD_UNIT=nfs-server.service
            Systemd_Filter  _SYSTEMD_UNIT=nfs-utils.service
            Systemd_Filter  _SYSTEMD_UNIT=node-problem-detector.service
            Systemd_Filter  _SYSTEMD_UNIT=ntp.service
            Systemd_Filter  _SYSTEMD_UNIT=oem-cloudinit.service
            Systemd_Filter  _SYSTEMD_UNIT=rkt-gc.service
            Systemd_Filter  _SYSTEMD_UNIT=rkt-metadata.service
            Systemd_Filter  _SYSTEMD_UNIT=rpc-idmapd.service
            Systemd_Filter  _SYSTEMD_UNIT=rpc-mountd.service
            Systemd_Filter  _SYSTEMD_UNIT=rpc-statd.service
            Systemd_Filter  _SYSTEMD_UNIT=rpcbind.service
            Systemd_Filter  _SYSTEMD_UNIT=set-aws-environment.service
            Systemd_Filter  _SYSTEMD_UNIT=system-cloudinit.service
            Systemd_Filter  _SYSTEMD_UNIT=systemd-timesyncd.service
            Systemd_Filter  _SYSTEMD_UNIT=update-ca-certificates.service
            Systemd_Filter  _SYSTEMD_UNIT=user-cloudinit.service
            Systemd_Filter  _SYSTEMD_UNIT=var-lib-etcd2.service
            Max_Entries     1000
            Read_From_Tail  true
      ## NOTE: Requires trailing "." for fully-qualified name resolution
      outputs: |
        [OUTPUT]
            Name          forward
            Match         *
            Host          ${FLUENTD_LOGS_SVC}.${NAMESPACE}.svc.cluster.local.
            Port          24321
            Retry_Limit   False
            tls           off
            tls.verify    on
            tls.debug     1
            # Disable keepalive for better load balancing
            net.keepalive off
      customParsers: |
        [PARSER]
            Name        multi_line
            Format      regex
            Regex       (?<log>^{"log":"\d{4}-\d{1,2}-\d{1,2}.\d{2}:\d{2}:\d{2}.*)
        [PARSER]
            Name         crio
            Format       regex
            Regex        ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$
            Time_Key     time
            Time_Format  %Y-%m-%dT%H:%M:%S.%L%z
        [PARSER]
            Name         containerd
            Format       regex
            Regex        ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$
            Time_Key     time
            Time_Format  %Y-%m-%dT%H:%M:%S.%LZ

  ## Configure kube-prometheus-stack
  ## ref: https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
  kube-prometheus-stack:
    prometheusOperator:
      image:
        repository: quay.io/prometheus-operator/prometheus-operator
        tag: v0.43.2
      prometheusConfigReloaderImage:
        repository: quay.io/prometheus-operator/prometheus-config-reloader
        tag: v0.43.2
      denyNamespaces:
      - openshift-apiserver
      - openshift-apiserver-operator
      - openshift-authentication
      - openshift-authentication-operator
      - openshift-cloud-credential-operator
      - openshift-cluster-machine-approver
      - openshift-cluster-samples-operator
      - openshift-cluster-storage-operator
      - openshift-cluster-version
      - openshift-config-operator
      - openshift-console-operator
      - openshift-controller-manager
      - openshift-controller-manager-operator
      - openshift-dns,openshift-dns-operator
      - openshift-etcd-operator
      - openshift-image-registry
      - openshift-ingress
      - openshift-ingress-operator
      - openshift-insights
      - openshift-kube-apiserver
      - openshift-kube-apiserver-operator
      - openshift-kube-controller-manager
      - openshift-kube-controller-manager-operator
      - openshift-kube-scheduler
      - openshift-kube-scheduler-operator
      - openshift-kube-storage-version-migrator
      - openshift-kube-storage-version-migrator-operator
      - openshift-machine-api
      - openshift-machine-config-operator
      - openshift-marketplace
      - openshift-monitoring
      - openshift-multus
      - openshift-oauth-apiserver
      - openshift-operator-lifecycle-manager
      - openshift-sdn
      - openshift-service-ca-operator
      - openshift-user-workload-monitoring
   
    kube-state-metrics:
      image:
        repository: quay.io/coreos/kube-state-metrics
        tag: v1.9.7
    prometheus-node-exporter:
      image:
        repository: quay.io/prometheus/node-exporter
        tag: v1.0.1
      service:
        port: 9200
        targetPort: 9200
    prometheus:
      image:
        repository: quay.io/prometheus/prometheus
        tag: v2.22.1

      prometheusSpec:
        thanos:
          baseImage: quay.io/thanos/thanos
          version: v0.10.0

  ## Configure optional OpenTelemetry Collector in Agent mode
  otelagent:
    enabled: false
      image:
        repository: "public.ecr.aws/sumologic/opentelemetry-collector"
        tag: "0.22.0-sumo"

  ## Configure otelcol
  otelcol:
      image:
        repository: "public.ecr.aws/sumologic/opentelemetry-collector"
        tag: "0.22.0-sumo"

  ## Configure telegraf-operator
  ## This is an experimental configuration and shouldn't be used in production environment
  ## ref: https://github.com/influxdata/helm-charts/blob/master/charts/telegraf-operator/values.yaml
  telegraf-operator:
    enabled: false
    image:
      repository: quay.io/influxdb/telegraf-operator
      sidecarImage: public.ecr.aws/sumologic/telegraf:1.14.4

  ## Configure falco
  ## This is an experimental configuration and shouldn't be used in production environment
  ## https://github.com/falcosecurity/charts/tree/master/falco
  falco:
    enabled: false
    image:
      registry: public.ecr.aws
      repository: sumologic/falco
      tag: 0.27.0

    ## Add kernel-devel package through MachineConfig, required to enable building of missing falco modules (only for OpenShift)
    addKernelDevel: true
    ## Add initContainers to Falco pod
    extraInitContainers:
      ## Add initContainer to wait until kernel-devel is installed on host
      - name: init-falco
        image: busybox:1.33.0
        command:
          - 'sh'
          - '-c'
          - |
            while [ -f /host/etc/redhat-release ] && [ -z "$(ls /host/usr/src/kernels)" ] ; do
            echo "waiting for kernel headers to be installed"
            sleep 3
            done
        volumeMounts:
          - mountPath: /host/usr
            name: usr-fs
            readOnly: true
          - mountPath: /host/etc
            name: etc-fs
            readOnly: true

  ## Configure Tailing Sidecar Operator
  ## ref: https://github.com/SumoLogic/tailing-sidecar/blob/main/helm/tailing-sidecar-operator/values.yaml
  tailing-sidecar-operator:
    enabled: false
    operator:
      image:
        repository: ghcr.io/sumologic/tailing-sidecar-operator:0.3.0
        tag: 0.3.0
    sidecar:
      image:
        repository: ghcr.io/sumologic/tailing-sidecar:0.3.0
        tag: 0.3.0
    kubeRbacProxy:
      image:
        repository: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        tag: v0.5.0
